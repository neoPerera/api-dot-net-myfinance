// <auto-generated />
using System;
using INFRASTRUCTURE.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace INFRASTRUCTURE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250316160833_AddAccountEntity")]
    partial class AddAccountEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CORE.Entities.Account", b =>
                {
                    b.Property<string>("StrId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("str_id");

                    b.Property<DateTime>("DtmDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("dtm_date");

                    b.Property<string>("StrActive")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("str_active");

                    b.Property<char>("StrIsMain")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("character(1)")
                        .HasDefaultValue('N')
                        .HasColumnName("str_ismain");

                    b.Property<string>("StrName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("str_name");

                    b.Property<string>("StrUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("str_user");

                    b.HasKey("StrId");

                    b.HasIndex("StrName")
                        .IsUnique();

                    b.ToTable("tbl_refmas_accounts", (string)null);
                });

            modelBuilder.Entity("CORE.Entities.Form", b =>
                {
                    b.Property<string>("FormId")
                        .HasColumnType("text")
                        .HasColumnName("str_form_id");

                    b.Property<char>("Active")
                        .HasColumnType("character(1)")
                        .HasColumnName("str_active");

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_component");

                    b.Property<string>("FormName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_form_name");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_icon");

                    b.Property<char>("IsMenu")
                        .HasColumnType("character(1)")
                        .HasColumnName("str_isMenu");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_link");

                    b.Property<string>("MenuId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("str_menu_id");

                    b.HasKey("FormId");

                    b.HasIndex("FormId")
                        .IsUnique();

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("CORE.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
